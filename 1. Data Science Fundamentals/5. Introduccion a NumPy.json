{"cells":[{"cell_type":"markdown","metadata":{"id":"btTwhf-zQhad"},"source":["# Introduccion a numpy\n","\n","## Tarea\n","\n","se busca vender pasteles y recaudar $200\n"]},{"cell_type":"markdown","metadata":{"id":"laeXehAsQhal"},"source":["Lista de precios\n","\n","brownies: 2\n","\n","galletas: 1\n","\n","pasteles: 10"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"16-ongIKQham","outputId":"f49daed9-9811-4ee9-94c2-c5b95c6ceb1b"},"outputs":[{"data":{"text/plain":["list"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# Lista de precios\n","price = [2,1,10]\n","type(price)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SPJ5Tp1iQhao","outputId":"04a9b7a4-c08c-47b7-dad7-4aa919dc3a14"},"outputs":[{"data":{"text/plain":["list"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["#Lista de cantidad\n","quantity_sold = [17,40,1]\n","type(quantity_sold)"]},{"cell_type":"markdown","metadata":{"id":"gBqTGU6OQhap"},"source":["Para buscar el dinero recaudado se puede multiplicar cada tipo de elemento"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oyKdl8IsQhap"},"outputs":[],"source":["productos = [\"brownies\",\"galletas\",\"pasteles\"]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sIdCWGzJQhaq","outputId":"61628562-eb78-4eac-f326-1315fbcb6fa9"},"outputs":[{"name":"stdout","output_type":"stream","text":["el valor de brownies vendid@s es: $ 34\n","el valor de galletas vendid@s es: $ 40\n","el valor de pasteles vendid@s es: $ 10\n"]}],"source":["for x in range(len(price)):\n","    print(f\"el valor de {productos[x]} vendid@s es: $ {price[x] * quantity_sold[x]}\")\n"]},{"cell_type":"markdown","metadata":{"id":"vnqpE0UNQhar"},"source":["## Otra forma de hacer esto es importando Numpy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hODFLDePQhar"},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"neWpFm_IQhas","outputId":"6474e402-c3c3-4dbd-b50b-6209080c3154"},"outputs":[{"data":{"text/plain":["numpy.ndarray"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["price_array = np.array(price) # se crea array con nombre de lista_array\n","quantity_sold_array = np.array(quantity_sold)\n","type(price_array)# esta conversion de lista a array se llama numpy.ndarray - donde n es la dimension"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3wYz3q34Qhat","outputId":"6ccb8cfe-46c6-4632-9431-8c174e10aeb9"},"outputs":[{"data":{"text/plain":["array([34, 40, 10])"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["price_array * quantity_sold_array # a diferencia de las listas. \n","                                  #los arrays pueden ser sumados entre si, mientras tengan la misma cantidad de elementos."]},{"cell_type":"markdown","metadata":{"id":"k0Dg2l45Qhau"},"source":["Para calcular la ganancia de cada venta se debe restar el costo de produccion de cada elemento.\n","para esto se creara un array con numpy."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kAqFMnvSQhau"},"outputs":[],"source":["cost_array = np.array([0.25, 0.50, 5.00]) # en lugar de crear una lista y convertirla. aca se crea directamente como array"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DQ2u1BarQhav","outputId":"b34bceff-932d-4e15-fa1b-9410cb85c82e"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1.75 0.5  5.  ]\n"]}],"source":["profit_array = price_array - cost_array #para obtener la ganancia se resta el costo de produccion al precio de venta\n","print(profit_array) #es decir por cada brownie, galleta o pastel se gana 1.75, 0.5 y 5 respectivamente."]},{"cell_type":"markdown","metadata":{"id":"D-Mil2WmQhav"},"source":["Booleanos elementwise\n","\n","Para saber que elementos obtuvieron un beneficio superior a 2 se puede utilizar el tipo de dato booleano\n","el cual, segun elementwise (misma ubicacion de valor en arrays a procesar) dira True o False segun corresponda."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sa18SbK_Qhaw","outputId":"776f98d3-5789-4ff7-c6f3-55552dc382cd"},"outputs":[{"data":{"text/plain":["array([False, False,  True])"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["profit_array > 2.00"]},{"cell_type":"markdown","metadata":{"id":"J7gZjKakQhax"},"source":["## Anadir, eliminar y reemplazar elementos en un array de NumPy\n","\n","### Adicion.\n","\n","tambien se busca vender tartas por $7, por lo que se tendra que actualizar el array de precios."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3hyB2wgtQhax","outputId":"d5e58bb7-83dd-44d4-a7a7-53f9dcad2b76"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 2  1 10]\n"]}],"source":["#price_array = price_array + [7]  de esta forma, se suma el valor indicado a cada elemento del array.\n","#price_array = price_array - [7] asi, con esto se corrige lo hecho anteriormente.\n","print(price_array)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"azbbRhhQQhay","outputId":"b399f1f6-d246-43ca-bab5-4b22f23f959c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 2  1 10  7]\n"]}],"source":["price_array = np.append(price_array,7)# al igual que una lista, se utiliza el metodo append para aniadir un valor al array\n","print(price_array)"]},{"cell_type":"markdown","metadata":{"id":"B1i5anAxQhaz"},"source":["### Adicion de multiples valores en una linea.\n","\n","tambien se busca agregar otros productos.\n","\n","dulces: 4.50 - magdalenas: 3  - pan_de_platano:4  - torta=9"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GVFMp0NvQhaz","outputId":"af458e1e-aebf-4eca-f907-f7817b310d3c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 2.   1.  10.   7.   4.5  3.   4.   9. ]\n","float64\n"]}],"source":["price_array = np.append(price, [7, 4.50, 3, 4, 9])\n","print(price_array) # el resultado se muestra como decimal para acomodar al valor 4.50 del array\n","print(price_array.dtype) # mostrara el type de dato almacenado en array"]},{"cell_type":"markdown","metadata":{"id":"2bIDPvdhQha0"},"source":["### Eliminar\n","\n","En este caso, se busca eliminar el valor de la torta. lo cual se realiza con el comando np.delete().\n","al igual que una lista, el array utiliza la indexacion. partiendo del 0 y donde el ultimo es -1."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PJixefgpQha0","outputId":"d548ab33-93a5-45d0-80a6-ca32cd8dfd19"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 2.   1.  10.   7.   4.5  3.   4. ]\n"]}],"source":["price_array = np.delete(price_array, -1)\n","print(price_array)"]},{"cell_type":"markdown","metadata":{"id":"5LIj8ZYiQha0"},"source":["### Reemplazar - Actualizar\n","Se busca tambien actualizar el precio de los pasteles de 10 a 12.\n","\n","esto mediante el indice del elemento.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a1Gv6-xpQha1","outputId":"50c6a4fe-3c21-49d0-d382-31226b649189"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 2.   1.  12.   7.   4.5  3.   4. ]\n"]}],"source":["price_array[2] = 12\n","print(price_array)"]},{"cell_type":"markdown","metadata":{"id":"vWzi0UngQha1"},"source":["actualizar el quantity_sold_array para incluir la venta de 2 tartas, 3 bandejas de dulces, \n","16 magdalenas y 5 panes de platano. una galleta vendida en realidad se cayo. 40 pasa a ser 39"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-lDKb65LQha1","outputId":"bafd3111-dcaa-4078-dd74-2c9a083f72ab"},"outputs":[{"name":"stdout","output_type":"stream","text":["[17 40  1]\n"]}],"source":["print(quantity_sold_array)# pre-validacion de objetos vendidos "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O3S0XlEBQha1","outputId":"9caa23d6-7bb5-4473-e62c-1a8ed2946117"},"outputs":[{"name":"stdout","output_type":"stream","text":["[17 39  1  2  3 16  5]\n"]}],"source":["quantity_sold_array = np.append(quantity_sold_array,[2,3,16,5]) # se adicionan objetos vendidos\n","quantity_sold_array[1] = 39 # se corrige galleta caida\n","print(quantity_sold_array)# validacion"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JR7pBkZJQha2","outputId":"5cc45a7f-ebc3-47b5-e67d-bfc6f8562105"},"outputs":[{"name":"stdout","output_type":"stream","text":["cada elemento vendio: [34.  39.  12.  14.  13.5 48.  20. ]\n","el total recaudado fue: 180.5\n"]}],"source":["total_array = quantity_sold_array * price_array\n","print(f\"cada elemento vendio: {total_array}\")\n","print(f\"el total recaudado fue: {total_array.sum()}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rVf96eekQha2","outputId":"45842e87-6671-4374-c65e-558dec0e7617"},"outputs":[{"name":"stdout","output_type":"stream","text":["[0 0 2 1 6 0 2]\n"]}],"source":["quantity_leftover_array = np.array([0,0,2,1,6,0,2])# se debe identificar con 0 los productos vendidos para mantener \n","print(quantity_leftover_array) #la misma cantidad de elementos entre los array"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GezP45_pQha2","outputId":"4e9edace-bf65-4c01-ad0a-9ddee973f030"},"outputs":[{"name":"stdout","output_type":"stream","text":[" suma de objetos vendidos en liquidacion: 33.0\n"," suma de ventas hechas, incluyendo liquidacion: 213.5\n"]}],"source":["sale_array = (price_array * 0.5) * quantity_leftover_array # para vender a la mitad se multiplica el valor por 0.5\n","total_sold = sale_array + total_array\n","print(f\" suma de objetos vendidos en liquidacion: {sale_array.sum()}\")\n","print(f\" suma de ventas hechas, incluyendo liquidacion: {total_sold.sum()}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ru_cgZSGQha3","outputId":"555de495-1b61-4a20-a59f-5a4493fa181a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Ingrese un numero: 44\n","Numero par\n","No es un numero primo\n","[1, 2, 4, 11, 22, 44]\n"]}],"source":["numero = int(input(\"Ingrese un numero: \"))\n","conjunto_divisores =[]\n","\n","if numero >= 2 and numero <= 1000:\n","    if numero % 2 == 0:\n","        print(\"Numero par\")\n","    else: \n","        print(\"Numero impar\")\n","    for x in range(1,1000):\n","        if numero % x ==0:\n","            conjunto_divisores.append(x)\n","    if len(conjunto_divisores) ==2:\n","        print(\"Es un numero primo\")\n","    else:\n","        print(\"No es un numero primo\")\n","    print(conjunto_divisores)\n","else:\n","    print(\"Numero ingresado fuera de rango\")"]},{"cell_type":"markdown","metadata":{"id":"Ooi5UmNkQha3"},"source":["3%2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i_zbsJOwQha4","outputId":"4b53b539-d7ca-4314-f1bc-570dd14c29ff"},"outputs":[{"data":{"text/plain":["7.333333333333333"]},"execution_count":127,"metadata":{},"output_type":"execute_result"}],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3q5g7acqQha4"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}